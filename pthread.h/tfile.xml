<?xml version="1.0"?>
<list-of-tests>
	<test>
		<desc></desc>
		<binary>t_pthread_attr_getdetachstate</binary>
		<timeout>10</timeout>
		<iterations>1</iterations>
		<optional>false</optional>
		<calls>
			<function>pthread_attr_destroy</function>
			<function>pthread_attr_getdetachstate</function>
			<function>pthread_attr_init</function>
			<function>pthread_attr_setdetachstate</function>
		</calls>
	</test>

	<test>
		<desc></desc>
		<binary>t_pthread_attr_getguardsize</binary>
		<timeout>10</timeout>
		<iterations>1</iterations>
		<optional>false</optional>
		<calls>
			<function>pthread_attr_destroy</function>
			<function>pthread_attr_getguardsize</function>
			<function>pthread_attr_init</function>
			<function>pthread_attr_setguardsize</function>
		</calls>
	</test>

	<test>
		<desc></desc>
		<binary>t_pthread_attr_getschedparam</binary>
		<timeout>10</timeout>
		<iterations>1</iterations>
		<optional>false</optional>
		<calls>
			<function>pthread_attr_destroy</function>
			<function>pthread_attr_getschedparam</function>
			<function>pthread_attr_init</function>
			<function>pthread_attr_setschedparam</function>
		</calls>
	</test>

	<test>
		<desc></desc>
		<binary>t_pthread_attr_getschedpolicy</binary>
		<timeout>10</timeout>
		<iterations>1</iterations>
		<optional>false</optional>
		<calls>
			<function>pthread_attr_destroy</function>
			<function>pthread_attr_getschedpolicy</function>
			<function>pthread_attr_init</function>
			<function>pthread_attr_setschedpolicy</function>
		</calls>
	</test>

	<test>
		<desc></desc>
		<binary>t_pthread_attr_getscope</binary>
		<timeout>10</timeout>
		<iterations>1</iterations>
		<optional>false</optional>
		<calls>
			<function>pthread_attr_destroy</function>
			<function>pthread_attr_getscope</function>
			<function>pthread_attr_init</function>
			<function>pthread_attr_setscope</function>
		</calls>
	</test>

	<test>
		<desc></desc>
		<binary>t_pthread_attr_getstack</binary>
		<timeout>10</timeout>
		<iterations>1</iterations>
		<optional>false</optional>
		<calls>
			<function>pthread_attr_destroy</function>
			<function>pthread_attr_getstack</function>
			<function>pthread_attr_init</function>
			<function>pthread_attr_setstack</function>
		</calls>
	</test>

	<test>
		<desc></desc>
		<binary>t_pthread_attr_getstacksize</binary>
		<timeout>10</timeout>
		<iterations>1</iterations>
		<optional>false</optional>
		<calls>
			<function>pthread_attr_destroy</function>
			<function>pthread_attr_getstacksize</function>
			<function>pthread_attr_init</function>
			<function>pthread_attr_setstacksize</function>
		</calls>
	</test>

	<test>
		<desc></desc>
		<binary>t_pthread_attr_setschedpolicy</binary>
		<timeout>10</timeout>
		<iterations>1</iterations>
		<optional>false</optional>
		<calls>
			<function>pthread_cond_wait</function>
			<function>pthread_cond_wait</function>
			<function>pthread_exit</function>
			<function>pthread_exit</function>
			<function>pthread_getschedparam</function>
			<function>pthread_getschedparam</function>
			<function>pthread_mutex_lock</function>
			<function>pthread_mutex_lock</function>
			<function>pthread_mutex_unlock</function>
			<function>pthread_mutex_unlock</function>
			<function>pthread_self</function>
			<function>pthread_self</function>
			<function>geteuid</function>
			<function>pthread_attr_init</function>
			<function>pthread_attr_setinheritsched</function>
			<function>pthread_attr_setschedparam</function>
			<function>pthread_attr_setschedpolicy</function>
			<function>pthread_cond_broadcast</function>
			<function>pthread_cond_destroy</function>
			<function>pthread_cond_init</function>
			<function>pthread_create</function>
			<function>pthread_join</function>
			<function>pthread_mutex_destroy</function>
			<function>pthread_mutex_init</function>
			<function>sched_get_priority_max</function>
			<function>sched_get_priority_min</function>
			<function>sleep</function>
		</calls>
	</test>

	<test>
		<desc></desc>
		<binary>t_pthread_barrier_init</binary>
		<timeout>10</timeout>
		<iterations>1</iterations>
		<optional>false</optional>
		<calls>
			<function>pthread_barrier_destroy</function>
			<function>pthread_barrier_init</function>
		</calls>
	</test>

	<test>
		<desc></desc>
		<binary>t_pthread_barrier_wait</binary>
		<timeout>10</timeout>
		<iterations>1</iterations>
		<optional>false</optional>
		<calls>
			<function>pthread_barrier_wait</function>
			<function>pthread_exit</function>
			<function>pthread_barrier_destroy</function>
			<function>pthread_barrier_init</function>
			<function>pthread_create</function>
			<function>pthread_join</function>
		</calls>
	</test>

	<test>
		<desc></desc>
		<binary>t_pthread_barrierattr_getpshared</binary>
		<timeout>10</timeout>
		<iterations>1</iterations>
		<optional>false</optional>
		<calls>
			<function>pthread_barrierattr_destroy</function>
			<function>pthread_barrierattr_getpshared</function>
			<function>pthread_barrierattr_init</function>
		</calls>
	</test>

	<test>
		<desc></desc>
		<binary>t_pthread_barrierattr_init</binary>
		<timeout>10</timeout>
		<iterations>1</iterations>
		<optional>false</optional>
		<calls>
			<function>exit</function>
			<function>signal</function>
			<function>pthread_barrierattr_destroy</function>
			<function>pthread_barrierattr_init</function>
			<function>signal</function>
		</calls>
	</test>

	<test>
		<desc></desc>
		<binary>t_pthread_cond_init</binary>
		<timeout>10</timeout>
		<iterations>1</iterations>
		<optional>false</optional>
		<calls>
			<function>pthread_cond_destroy</function>
			<function>pthread_cond_init</function>
		</calls>
	</test>

	<test>
		<desc></desc>
		<binary>t_pthread_cond_wait</binary>
		<timeout>10</timeout>
		<iterations>1</iterations>
		<optional>false</optional>
		<calls>
			<function>pthread_cond_destroy</function>
			<function>pthread_cond_init</function>
			<function>pthread_cond_timedwait</function>
			<function>pthread_mutex_destroy</function>
			<function>pthread_mutex_init</function>
			<function>pthread_mutex_lock</function>
			<function>pthread_mutex_unlock</function>
		</calls>
	</test>

	<test>
		<desc></desc>
		<binary>t_pthread_condattr_init</binary>
		<timeout>10</timeout>
		<iterations>1</iterations>
		<optional>false</optional>
		<calls>
			<function>pthread_condattr_destroy</function>
			<function>pthread_condattr_init</function>
		</calls>
	</test>

	<test>
		<desc></desc>
		<binary>t_pthread_condattr_getclock</binary>
		<timeout>10</timeout>
		<iterations>1</iterations>
		<optional>false</optional>
		<calls>
			<function>pthread_condattr_destroy</function>
			<function>pthread_condattr_getclock</function>
			<function>pthread_condattr_init</function>
		</calls>
	</test>

	<test>
		<desc></desc>
		<binary>t_pthread_condattr_getpshared</binary>
		<timeout>10</timeout>
		<iterations>1</iterations>
		<optional>false</optional>
		<calls>
			<function>pthread_condattr_destroy</function>
			<function>pthread_condattr_getpshared</function>
			<function>pthread_condattr_init</function>
		</calls>
	</test>

	<test>
		<desc></desc>
		<binary>t_pthread_equal</binary>
		<timeout>10</timeout>
		<iterations>1</iterations>
		<optional>false</optional>
		<calls>
			<function>pthread_exit</function>
			<function>pthread_create</function>
			<function>pthread_equal</function>
		</calls>
	</test>

	<test>
		<desc></desc>
		<binary>t_pthread_getcpuclockid</binary>
		<timeout>10</timeout>
		<iterations>1</iterations>
		<optional>false</optional>
		<calls>
			<function>pthread_getcpuclockid</function>
			<function>pthread_self</function>
		</calls>
	</test>

	<test>
		<desc></desc>
		<binary>t_pthread_kill</binary>
		<timeout>10</timeout>
		<iterations>1</iterations>
		<optional>false</optional>
		<calls>
			<function>pthread_exit</function>
			<function>sigaction</function>
			<function>sigdelset</function>
			<function>sigfillset</function>
			<function>sigprocmask</function>
			<function>sigsuspend</function>
			<function>getpid</function>
			<function>kill</function>
			<function>pthread_create</function>
			<function>pthread_kill</function>
			<function>sigaction</function>
			<function>sigemptyset</function>
			<function>sleep</function>
		</calls>
	</test>

	<test>
		<desc></desc>
		<binary>t_pthread_rwlock</binary>
		<timeout>10</timeout>
		<iterations>1</iterations>
		<optional>false</optional>
		<calls>
			<function>pthread_exit</function>
			<function>pthread_exit</function>
			<function>pthread_rwlock_rdlock</function>
			<function>pthread_rwlock_unlock</function>
			<function>pthread_rwlock_unlock</function>
			<function>pthread_rwlock_wrlock</function>
			<function>memset</function>
			<function>pthread_create</function>
			<function>pthread_join</function>
			<function>pthread_rwlock_destroy</function>
			<function>pthread_rwlock_init</function>
		</calls>
	</test>

	<test>
		<desc></desc>
		<binary>t_pthread_rwlock_init</binary>
		<timeout>10</timeout>
		<iterations>1</iterations>
		<optional>false</optional>
		<calls>
			<function>pthread_rwlock_destroy</function>
			<function>pthread_rwlock_init</function>
		</calls>
	</test>

	<test>
		<desc></desc>
		<binary>t_pthread_rwlock_deadlock</binary>
		<timeout>10</timeout>
		<iterations>1</iterations>
		<optional>false</optional>
		<calls>
			<function>pthread_exit</function>
			<function>pthread_rwlock_destroy</function>
			<function>pthread_rwlock_init</function>
			<function>pthread_rwlock_rdlock</function>
			<function>pthread_rwlock_unlock</function>
			<function>pthread_rwlock_wrlock</function>
			<function>pthread_create</function>
			<function>sleep</function>
		</calls>
	</test>

	<test>
		<desc></desc>
		<binary>t_pthread_rwlock_timedrdlock</binary>
		<timeout>10</timeout>
		<iterations>1</iterations>
		<optional>false</optional>
		<calls>
			<function>gettimeofday</function>
			<function>pthread_exit</function>
			<function>pthread_rwlock_timedrdlock</function>
			<function>pthread_create</function>
			<function>pthread_join</function>
			<function>pthread_rwlock_destroy</function>
			<function>pthread_rwlock_init</function>
			<function>pthread_rwlock_unlock</function>
			<function>pthread_rwlock_wrlock</function>
		</calls>
	</test>

	<test>
		<desc></desc>
		<binary>t_pthread_rwlock_timedwrlock</binary>
		<timeout>10</timeout>
		<iterations>1</iterations>
		<optional>false</optional>
		<calls>
			<function>gettimeofday</function>
			<function>pthread_exit</function>
			<function>pthread_rwlock_timedwrlock</function>
			<function>pthread_create</function>
			<function>pthread_join</function>
			<function>pthread_rwlock_destroy</function>
			<function>pthread_rwlock_init</function>
			<function>pthread_rwlock_rdlock</function>
			<function>pthread_rwlock_unlock</function>
		</calls>
	</test>

	<test>
		<desc></desc>
		<binary>t_pthread_rwlock_trywrlock</binary>
		<timeout>10</timeout>
		<iterations>1</iterations>
		<optional>false</optional>
		<calls>
			<function>pthread_rwlock_destroy</function>
			<function>pthread_rwlock_init</function>
			<function>pthread_rwlock_rdlock</function>
			<function>pthread_rwlock_trywrlock</function>
			<function>pthread_rwlock_unlock</function>
		</calls>
	</test>

	<test>
		<desc></desc>
		<binary>t_pthread_setcancelstate</binary>
		<timeout>10</timeout>
		<iterations>1</iterations>
		<optional>false</optional>
		<calls>
			<function>pthread_exit</function>
			<function>pthread_setcancelstate</function>
			<function>pthread_create</function>
			<function>pthread_join</function>
			<function>pthread_setcancelstate</function>
		</calls>
	</test>

	<test>
		<desc></desc>
		<binary>t_pthread_setcanceltype</binary>
		<timeout>10</timeout>
		<iterations>1</iterations>
		<optional>false</optional>
		<calls>
			<function>pthread_exit</function>
			<function>pthread_setcanceltype</function>
			<function>pthread_create</function>
			<function>pthread_join</function>
			<function>pthread_setcanceltype</function>
		</calls>
	</test>

	<test>
		<desc></desc>
		<binary>t_pthread_spin_init</binary>
		<timeout>10</timeout>
		<iterations>1</iterations>
		<optional>false</optional>
		<calls>
			<function>pthread_spin_destroy</function>
			<function>pthread_spin_init</function>
		</calls>
	</test>

	<test>
		<desc></desc>
		<binary>t_pthread_spin_lock</binary>
		<timeout>10</timeout>
		<iterations>1</iterations>
		<optional>false</optional>
		<calls>
			<function>pthread_spin_destroy</function>
			<function>pthread_spin_init</function>
			<function>pthread_spin_lock</function>
			<function>pthread_spin_unlock</function>
		</calls>
	</test>

	<test>
		<desc></desc>
		<binary>t_pthread_spin_lock2</binary>
		<timeout>10</timeout>
		<iterations>1</iterations>
		<optional>false</optional>
		<calls>
			<function>pthread_exit</function>
			<function>pthread_spin_lock</function>
			<function>pthread_spin_unlock</function>
			<function>sleep</function>
			<function>pthread_create</function>
			<function>pthread_spin_destroy</function>
			<function>pthread_spin_init</function>
			<function>pthread_spin_lock</function>
			<function>pthread_spin_trylock</function>
			<function>pthread_spin_unlock</function>
			<function>sleep</function>
		</calls>
	</test>

	<test>
		<desc></desc>
		<binary>t_pthread_testcancel</binary>
		<timeout>10</timeout>
		<iterations>1</iterations>
		<optional>false</optional>
		<calls>
			<function>pthread_exit</function>
			<function>pthread_exit</function>
			<function>pthread_setcancelstate</function>
			<function>pthread_testcancel</function>
			<function>pthread_testcancel</function>
			<function>sleep</function>
			<function>sleep</function>
			<function>pthread_cancel</function>
			<function>pthread_create</function>
			<function>pthread_join</function>
		</calls>
	</test>

	<test>
		<desc></desc>
		<binary>t_pthread_tsdata</binary>
		<timeout>10</timeout>
		<iterations>1</iterations>
		<optional>false</optional>
		<calls>
			<function>pthread_getspecific</function>
			<function>free</function>
			<function>pthread_exit</function>
			<function>pthread_setspecific</function>
			<function>malloc</function>
			<function>pthread_create</function>
			<function>pthread_join</function>
			<function>pthread_key_create</function>
			<function>pthread_key_delete</function>
		</calls>
	</test>

</list-of-tests>
